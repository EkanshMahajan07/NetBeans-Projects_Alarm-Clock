
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javazoom.jl.player.Player;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ekans
 */
public class Alarm_Clock extends javax.swing.JFrame implements Runnable{

    String sound, title;
    FileInputStream fileInputStream;
    BufferedInputStream bufferedInputStream;
    Player player;
    long all;
    String hours, hh, mm;
    String hourAlarm, minuteAlarm;
    
    /**
     * Creates new form Alarm_Clock
     */
    public Alarm_Clock() {
        initComponents();
        Thread t= new Thread(this);
        t.start();
        Calendar c= Calendar.getInstance();
        SimpleDateFormat simpleDateFormat= new SimpleDateFormat("hh");
        SimpleDateFormat simpleDateFormat2= new SimpleDateFormat("mm");
        Date date= c.getTime();
        hh=simpleDateFormat.format(date);
        mm= simpleDateFormat2.format(date);
        hour_box.setSelectedItem(hh);
        minute_box.setSelectedItem(mm);
        listen.setEnabled(false);

    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        current_time = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        minute_box = new javax.swing.JComboBox<>();
        hour_box = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        song_name = new javax.swing.JLabel();
        ringtone = new javax.swing.JButton();
        listen = new javax.swing.JButton();
        setalarm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel1.setText("ALARM CLOCK");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("TIMER");

        current_time.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        current_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        current_time.setText("Current Time");
        current_time.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Hour");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Minute");

        minute_box.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        minute_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        hour_box.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        hour_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        hour_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hour_boxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText(":");

        song_name.setText("Song Name");

        ringtone.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ringtone.setText("Ringtone");
        ringtone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ringtoneActionPerformed(evt);
            }
        });

        listen.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        listen.setText("Listen");
        listen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listenActionPerformed(evt);
            }
        });

        setalarm.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        setalarm.setText("Set Alarm");
        setalarm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setalarmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ringtone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setalarm))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(hour_box, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(minute_box, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(current_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(song_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(current_time)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minute_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hour_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2))
                .addGap(53, 53, 53)
                .addComponent(song_name)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ringtone)
                    .addComponent(listen)
                    .addComponent(setalarm))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ringtoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ringtoneActionPerformed
        // TODO add your handling code here:
        chooseSong();
        if(!sound.equals(null)){
            song_name.setText("Alarm Music : "+title);
        }
        listen.setEnabled(true);
    }//GEN-LAST:event_ringtoneActionPerformed

    private void hour_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hour_boxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_hour_boxActionPerformed

    private void listenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listenActionPerformed
        // TODO add your handling code here:
        if(listen.getText().equals("Listen")){
            startAlarm();
            listen.setText("Stop Sound");
            setalarm.setEnabled(false);
        }
        else if(listen.getText().equals("Stop Sound")){
            stopAlarm();
            listen.setText("Listen");
            setalarm.setEnabled(true);
        }
    }//GEN-LAST:event_listenActionPerformed

    private void setalarmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setalarmActionPerformed
        // TODO add your handling code here:
        hourAlarm = hour_box.getSelectedItem().toString();
        minuteAlarm = minute_box.getSelectedItem().toString();
        if(!song_name.getText().isEmpty()){
            String alarmClock = hourAlarm + ":" + minuteAlarm;
            System.out.println(alarmClock);
            alarmTime(Integer.valueOf(hourAlarm),Integer.valueOf(minuteAlarm));
            
        }
        else{
            JOptionPane.showMessageDialog(null, "You don't choose alarm music...", "warning",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_setalarmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alarm_Clock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alarm_Clock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alarm_Clock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alarm_Clock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alarm_Clock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel current_time;
    private javax.swing.JComboBox<String> hour_box;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton listen;
    private javax.swing.JComboBox<String> minute_box;
    private javax.swing.JButton ringtone;
    private javax.swing.JButton setalarm;
    private javax.swing.JLabel song_name;
    // End of variables declaration//GEN-END:variables

public void run(){
    while (true) {
            Calendar c = Calendar.getInstance();

            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("hh:mm:ss");
            Date date = c.getTime();
             hours = simpleDateFormat.format(date);
            current_time.setText(hours);
            
    }
}

public void chooseSong(){
    JFileChooser jfc= new JFileChooser();
    int soundINT = jfc.showOpenDialog(null);
    if(soundINT == JFileChooser.APPROVE_OPTION){
        File alarmMusic= jfc.getSelectedFile();
        sound= alarmMusic.getAbsolutePath();
        title= jfc.getSelectedFile().getName();
        System.out.println(title);
    }
    else if(soundINT == JFileChooser.CANCEL_OPTION){
        JOptionPane.showMessageDialog(null, "You don't choose alarm music...");
    }
}


public void startAlarm(){
    try{
        fileInputStream = new FileInputStream(sound);
        bufferedInputStream = new BufferedInputStream(fileInputStream);
        player = new Player(bufferedInputStream);
        all = fileInputStream.available();
        new Thread(){
            public void run(){
                try{
                    player.play();
                }catch(Exception e){
                }
            }
        }.start();
    }catch(Exception e){
    }
}


public void alarmTime(final int hour, final int minute){
    Thread t;
        t = new Thread(){
            public void run(){
                int time = 0;
                while(time == 0){
                    Calendar c = Calendar .getInstance();
                    int h = c.get(Calendar.HOUR);
                    int m = c.get(Calendar.MINUTE);
                    if (hour == h && minute == m){
                        startAlarm();
                        JOptionPane.showMessageDialog(null, "Alarm");
                        JOptionPane.showConfirmDialog(null, "Stop Alarm","", JOptionPane.CLOSED_OPTION);
                        
                            stopAlarm();
                            break;
                        
                    }
                }
            }
        }; t.start();
}

public void stopAlarm(){
    if(player != null){
        player.close();
    }
}

}
